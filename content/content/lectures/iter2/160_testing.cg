---
title: Developing Quality
desc: Thinking broadly about quality
cat: testing
slides: true
---
:h2 Logistics

* :topic_link :successful_term_projects

:slide_bigtitle Developing Quality Software

* Why do people think this is important?
* How do you define quality?
* It's quite a lot more than testing
* It's a set of processes and practices
* Our undertanding of these are constantly evolving
* The *devops* movement

:slide_title Best Practices

* Version control
* Test Automation
* Trunk based development
* Continuous Integration
* Deployment automation
* Continuous delivery
* Test Data Management

:slide_title Version Control

* Our use of git and github has us on the right path
* Git is more than just a source code management system
* It grew up with and around quality software processes
* It touches many of the practices
* Not just source code but "Configuration as code"
* In Rails, look at config/environments/*.rb

:slide_title Test Automation

* Two sides of the same coin
* Writing tests, the right tests, and enough tests
* Automating the running of tests, at the right time, and the right subset
* In Rails, `rails test`, `minitest`, and many other building blocks

:slide_title Trunk Based Development

* Proper use of branches
* Deciding when a branch should be created
* Deciding that branches should be merged back within a day or so

:slide_title Continuous Integration

* Closely related
* Integration here means combining changes from different developers
* Continuously face up to merge conflicts
* Don't let them fester

:slide_title Deployment Automation

:slide_title Continious Delivery

:slide_title Test Data Management

:slide_bigtitle Why Testing?

:image :bewarebugs

* Interesting from an old archival [letter between Knuth and Emde Boas](https://staff.fnwi.uva.nl/p.vanemdeboas/knuthnote.pdf)
* Knuth very famous, Emde Boas, not so much.
* If you look at the attached paper you also see what I think is one of the very earliest uses of classes. It is on Figure 2: Page 1 of classroom note.

:lecture_end