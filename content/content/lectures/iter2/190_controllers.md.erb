---
title: Rails Controllers
desc: We jump deep Controllers and MVC.
hwref: week7
cat: rails
slides: true
---

:slide_title Logistics

* About participation and attendance, especially labs
* Project Update Meetings scheduling - coming during the week of March 29
* Quiz

:slide_title Project Status Discussion

* Where should we be right now with the projects?
* You should be meeting face to face at least once a week
* You should have a working Rails application with a working (but not 100% complete schema), with models, controllers and views, deployed to Heroku with seed data and working.
* Lets look at the schedule:
* You should distribute the work so each teammate has a separate piece of work to do
* Don't fuss right now with subtle algorithms, focus on the whole system

:topic_include :url_rails

:slide_title Job of the controller

* Recall, the URL is parsed by the router, which locates and calls the right controller
* Breaking it down:
    1. Router parses URL
    1. Determines the controller (error: Can't find Controller's ruby file in app/controllers/)
    1. Determines the action insider the controller (error: Can't find a method for the action)
    1. Calls the action method, with the parameters corresponding to the 'rest' of the url
    1. When action completes, a view of the same name is located (error: Can't find Views html.erb file in the `views/<controllername>/` directory)
    1. View's 'erb' is expanded and returned, through controller, router, web server, back to the user.

:slide_title Resources in Rails

* Automatic wiring of plumbing between urls, routing, models, and controllers
* Takes advantage of standardized patterns
  * Nesting model in the URLs
  * CRUD operations as actions
  * Path naming (path_to_user instead of "http://www.mysite.com/user/3")
  * Controller naming
* Huge time saver and bug saver!

:h3 Controller Actions: Review

* Who calls the controller action?
* What parameters are supplied automatically by the controller action?
* Why does it take two separate actions to implement "create"?

:lecture_end
